  pipeline {
    // Agent as Docker Container
    agent {
      docker {
        image 'kalpeshmohanta/docker-node-sonar_scanner:v18'
        args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
      }
    }



    stages {
      stage('Checkout') {
        steps {
          sh 'echo passed'
          //git branch: 'main', url: 'https://github.com/kalpeshmohanta/Devops_Project_2-Mern_3_Tier_App.git'
        }
      }


      stage('SonarQube Analysis') {
        environment{
            scannerHome = tool 'sonarqube-tool'
        }
        steps {
            withSonarQubeEnv('sonarqube-server') {
              sh '''
                  # /usr/local/bin/sonar-scanner \
                  ${scannerHome}/bin/sonar-scanner \
                  -Dsonar.projectKey=myapp-sonar \
                  -Dsnonar.projectName=myapp-sonar \
                  -Dsonar.sources=. \
              '''
            }
          }
        }


      stage('Build and Push Docker Frontend Image') {
        environment {
          DOCKER_IMAGE = "kalpeshmohanta/mern-docker-compose-frontend:${BUILD_NUMBER}"
          // DOCKERFILE_LOCATION = "mern-docker-compose/frontend/Dockerfile"
          REGISTRY_CREDENTIALS = credentials('docker-cred')
        }
        steps {
          script {
              sh 'cd mern-docker-compose/frontend && docker build -t ${DOCKER_IMAGE} .'
              def dockerImage = docker.image("${DOCKER_IMAGE}")
              docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                  dockerImage.push()
              }
          }
        }
      }
    



      stage('Build and Push Docker Backend Image') {
        environment {
          DOCKER_IMAGE = "kalpeshmohanta/mern-docker-compose-backend:${BUILD_NUMBER}"
          // DOCKERFILE_LOCATION = "mern-docker-compose/backend/Dockerfile"
          REGISTRY_CREDENTIALS = credentials('docker-cred')
        }
        steps {
          script {
              sh 'cd mern-docker-compose/backend && docker build -t ${DOCKER_IMAGE} .'
              def dockerImage = docker.image("${DOCKER_IMAGE}")
              docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                  dockerImage.push()
              }
          }
        }
      }



      stage('Update Deployment File in Manifest') {

          environment {
              GIT_REPO_NAME = "Devops_Project_2-Mern_3_Tier_App"
              GIT_USER_NAME = "kalpeshmohanta"
          }

          steps {
              withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                  sh '''
                      git init
                      git config user.email "kalpeshmohanta@gmail.com"
                      git config user.name "kalpeshmohanta"
                      BUILD_NUMBER=${BUILD_NUMBER}

                      # sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" manifests/deployment.yml

                      sed -i "s|kalpeshmohanta/mern-docker-compose-backend:.*|kalpeshmohanta/mern-docker-compose-backend:${BUILD_NUMBER}|g" manifests/deployment.yml
                      sed -i "s|kalpeshmohanta/mern-docker-compose-frontend:.*|kalpeshmohanta/mern-docker-compose-frontend:${BUILD_NUMBER}|g" manifests/deployment.yml

                      git add manifests/deployment.yml
                      git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                      git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                  '''
            }
          }
      }

    }
  }